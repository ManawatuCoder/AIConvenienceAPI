openapi: 3.1.0
info:
  title: Azure Storage Management API - Blob Services
  version: '2019-06-01'
tags:
  - name: BlobService
  - name: BlobContainers
paths:
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices:
    get:
      operationId: BlobServices_list
      description: List blob services of storage account. It returns a collection of one object named default.
      parameters:
        - name: subscriptionId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/SubscriptionId'
        - name: resourceGroupName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ResourceGroupName'
        - name: accountName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/StorageAccountName'
        - name: api-version
          in: query
          required: true
          schema:
            type: string
          explode: false
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlobServiceItems'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - BlobService
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers:
    get:
      operationId: BlobContainers_list
      description: Lists all containers and does not support a prefix like data plane
      parameters:
        - name: subscriptionId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/SubscriptionId'
        - name: resourceGroupName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ResourceGroupName'
        - name: accountName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/StorageAccountName'
        - name: api-version
          in: query
          required: true
          schema:
            type: string
          explode: false
        - name: $maxpagesize
          in: query
          required: false
          schema:
            type: string
          explode: false
        - name: $filter
          in: query
          required: false
          schema:
            type: string
          explode: false
        - name: $include
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/ListContainersInclude'
          explode: false
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListContainerItems'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - BlobContainers
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}:
    put:
      operationId: BlobContainers_create
      description: Creates a new container under the specified account
      parameters:
        - name: subscriptionId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/SubscriptionId'
        - name: resourceGroupName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ResourceGroupName'
        - name: accountName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/StorageAccountName'
        - name: containerName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ContainerName'
        - name: api-version
          in: query
          required: true
          schema:
            type: string
          explode: false
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlobContainer'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - BlobContainers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlobContainer'
    patch:
      operationId: BlobContainers_update
      description: Updates container properties as specified in request body
      parameters:
        - name: subscriptionId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/SubscriptionId'
        - name: resourceGroupName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ResourceGroupName'
        - name: accountName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/StorageAccountName'
        - name: containerName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ContainerName'
        - name: api-version
          in: query
          required: true
          schema:
            type: string
          explode: false
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlobContainer'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - BlobContainers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlobContainer'
    get:
      operationId: BlobContainers_get
      description: Gets properties of a specified container
      parameters:
        - name: subscriptionId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/SubscriptionId'
        - name: resourceGroupName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ResourceGroupName'
        - name: accountName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/StorageAccountName'
        - name: containerName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ContainerName'
        - name: api-version
          in: query
          required: true
          schema:
            type: string
          explode: false
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlobContainer'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - BlobContainers
    delete:
      operationId: BlobContainers_delete
      description: Deletes specified container under its account
      parameters:
        - name: subscriptionId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/SubscriptionId'
        - name: resourceGroupName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ResourceGroupName'
        - name: accountName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/StorageAccountName'
        - name: containerName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ContainerName'
        - name: api-version
          in: query
          required: true
          schema:
            type: string
          explode: false
      responses:
        '204':
          description: 'There is no content to send for this request, but the headers may be useful. '
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - BlobContainers
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/clearLegalHold:
    post:
      operationId: BlobContainers_clearLegalHold
      description: Clears legal hold tags
      parameters:
        - name: subscriptionId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/SubscriptionId'
        - name: resourceGroupName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ResourceGroupName'
        - name: accountName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/StorageAccountName'
        - name: containerName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ContainerName'
        - name: api-version
          in: query
          required: true
          schema:
            type: string
          explode: false
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalHold'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - BlobContainers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LegalHold'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/immutabilityPolicies/default/extend:
    post:
      operationId: BlobContainers_extendImmutabilityPolicy
      description: Extends the immutabilityPeriodSinceCreationInDays of a locked immutabilityPolicy
      parameters:
        - name: subscriptionId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/SubscriptionId'
        - name: resourceGroupName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ResourceGroupName'
        - name: accountName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/StorageAccountName'
        - name: containerName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ContainerName'
        - name: api-version
          in: query
          required: true
          schema:
            type: string
          explode: false
        - name: If-Match
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImmutabilityPolicy'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - BlobContainers
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImmutabilityPolicy'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/immutabilityPolicies/default/lock:
    post:
      operationId: BlobContainers_lockImmutabilityPolicy
      description: Sets the ImmutabilityPolicy to Locked state
      parameters:
        - name: subscriptionId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/SubscriptionId'
        - name: resourceGroupName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ResourceGroupName'
        - name: accountName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/StorageAccountName'
        - name: containerName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ContainerName'
        - name: api-version
          in: query
          required: true
          schema:
            type: string
          explode: false
        - name: If-Match
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImmutabilityPolicy'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - BlobContainers
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/immutabilityPolicies/{immutabilityPolicyName}:
    put:
      operationId: BlobContainers_createOrUpdateImmutabilityPolicy
      description: Creates or updates an unlocked immutability policy
      parameters:
        - name: subscriptionId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/SubscriptionId'
        - name: resourceGroupName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ResourceGroupName'
        - name: accountName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/StorageAccountName'
        - name: containerName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ContainerName'
        - name: immutabilityPolicyName
          in: path
          required: true
          schema:
            type: string
            enum:
              - default
        - name: api-version
          in: query
          required: true
          schema:
            type: string
          explode: false
        - name: If-Match
          in: header
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImmutabilityPolicy'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - BlobContainers
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImmutabilityPolicy'
    get:
      operationId: BlobContainers_getImmutabilityPolicy
      description: Gets the existing immutability policy along with the corresponding ETag
      parameters:
        - name: subscriptionId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/SubscriptionId'
        - name: resourceGroupName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ResourceGroupName'
        - name: accountName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/StorageAccountName'
        - name: containerName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ContainerName'
        - name: immutabilityPolicyName
          in: path
          required: true
          schema:
            type: string
            enum:
              - default
        - name: api-version
          in: query
          required: true
          schema:
            type: string
          explode: false
        - name: If-Match
          in: header
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImmutabilityPolicy'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - BlobContainers
    delete:
      operationId: BlobContainers_deleteImmutabilityPolicy
      description: Aborts an unlocked immutability policy
      parameters:
        - name: subscriptionId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/SubscriptionId'
        - name: resourceGroupName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ResourceGroupName'
        - name: accountName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/StorageAccountName'
        - name: containerName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ContainerName'
        - name: immutabilityPolicyName
          in: path
          required: true
          schema:
            type: string
            enum:
              - default
        - name: api-version
          in: query
          required: true
          schema:
            type: string
          explode: false
        - name: If-Match
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImmutabilityPolicy'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - BlobContainers
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default/containers/{containerName}/setLegalHold:
    post:
      operationId: BlobContainers_setLegalHold
      description: Sets legal hold tags
      parameters:
        - name: subscriptionId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/SubscriptionId'
        - name: resourceGroupName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ResourceGroupName'
        - name: accountName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/StorageAccountName'
        - name: containerName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ContainerName'
        - name: api-version
          in: query
          required: true
          schema:
            type: string
          explode: false
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LegalHold'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - BlobContainers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LegalHold'
  /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/{BlobServicesName}:
    put:
      operationId: BlobServices_setServiceProperties
      description: Sets the properties of a storage account's Blob service
      parameters:
        - name: subscriptionId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/SubscriptionId'
        - name: resourceGroupName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ResourceGroupName'
        - name: accountName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/StorageAccountName'
        - name: BlobServicesName
          in: path
          required: true
          schema:
            type: string
            enum:
              - default
        - name: api-version
          in: query
          required: true
          schema:
            type: string
          explode: false
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlobServiceProperties'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - BlobService
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlobServiceProperties'
    get:
      operationId: BlobServices_getServiceProperties
      description: Gets the properties of a storage account's Blob service
      parameters:
        - name: subscriptionId
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/SubscriptionId'
        - name: resourceGroupName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/ResourceGroupName'
        - name: accountName
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/StorageAccountName'
        - name: BlobServicesName
          in: path
          required: true
          schema:
            type: string
            enum:
              - default
        - name: api-version
          in: query
          required: true
          schema:
            type: string
          explode: false
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlobServiceProperties'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      tags:
        - BlobService
components:
  schemas:
    AzureEntityResource:
      type: object
      properties:
        id:
          type: string
          description: Fully qualified resource ID for the resource
        name:
          type: string
          description: The name of the resource
        type:
          type: string
          description: The type of the resource
        etag:
          type: string
          description: Resource Etag
      description: Azure Entity Resource
    AzureResource:
      type: object
      properties:
        id:
          type: string
          description: Fully qualified resource ID for the resource
        name:
          type: string
          description: The name of the resource
        type:
          type: string
          description: The type of the resource
      description: Azure Resource
    BlobContainer:
      type: object
      properties:
        properties:
          allOf:
            - $ref: '#/components/schemas/ContainerProperties'
          description: Properties of the blob container
      allOf:
        - $ref: '#/components/schemas/AzureEntityResource'
      description: Properties of the blob container
    BlobServiceItems:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/BlobServiceProperties'
          description: List of blob services returned
      description: List of blob services
    BlobServiceProperties:
      type: object
      properties:
        properties:
          allOf:
            - $ref: '#/components/schemas/BlobServicePropertiesInner'
          description: The properties of a storage account's Blob service
        sku:
          description: Sku name and tier
      allOf:
        - $ref: '#/components/schemas/AzureResource'
      description: The properties of a storage account's Blob service
    BlobServicePropertiesInner:
      type: object
      properties:
        cors:
          description: Specifies CORS rules for the Blob service
        defaultServiceVersion:
          type: string
          description: DefaultServiceVersion indicates the default version to use for requests to the Blob service
        deleteRetentionPolicy:
          description: The blob service properties for blob soft delete
        isVersioningEnabled:
          type: boolean
          description: Versioning is enabled if set to true
        automaticSnapshotPolicyEnabled:
          type: boolean
          description: Deprecated in favor of isVersioningEnabled property
        changeFeed:
          allOf:
            - $ref: '#/components/schemas/ChangeFeed'
          description: The blob service properties for change feed events
        restorePolicy:
          allOf:
            - $ref: '#/components/schemas/RestorePolicyProperties'
          description: The blob service properties for blob restore policy
        containerDeleteRetentionPolicy:
          description: The blob service properties for container soft delete
        lastAccessTimeTrackingPolicy:
          allOf:
            - $ref: '#/components/schemas/LastAccessTimeTrackingPolicy'
          description: The blob service property to configure last access time based tracking policy
      description: The properties of a storage account's Blob service
    ChangeFeed:
      type: object
      properties:
        enabled:
          type: boolean
          description: Indicates whether change feed event logging is enabled for the Blob service
        retentionInDays:
          type: integer
          format: int32
          minimum: 1
          maximum: 146000
          description: Indicates the duration of changeFeed retention in days
      description: The blob service properties for change feed events
    ContainerName:
      type: string
      minLength: 3
      maxLength: 63
      pattern: ^[a-z0-9]([a-z0-9\-]*[a-z0-9])?$
      description: Container name between 3 and 63 characters
    ContainerProperties:
      type: object
      properties:
        version:
          type: string
          description: The version of the deleted blob container
        deleted:
          type: boolean
          description: Indicates whether the blob container was deleted
        deletedTime:
          type: string
          format: date-time
          description: Blob container deletion time
        remainingRetentionDays:
          type: integer
          format: int32
          description: Remaining retention days for soft deleted blob container
        defaultEncryptionScope:
          type: string
          description: Default the container to use specified encryption scope for all writes
        denyEncryptionScopeOverride:
          type: boolean
          description: Block override of encryption scope from the container default
        publicAccess:
          allOf:
            - $ref: '#/components/schemas/PublicAccess'
          description: Specifies whether data in the container may be accessed publicly and the level of access
        lastModifiedTime:
          type: string
          format: date-time
          description: Returns the date and time the container was last modified
        leaseStatus:
          allOf:
            - $ref: '#/components/schemas/LeaseStatus'
          description: The lease status of the container
        leaseState:
          allOf:
            - $ref: '#/components/schemas/LeaseState'
          description: Lease state of the container
        leaseDuration:
          allOf:
            - $ref: '#/components/schemas/LeaseDuration'
          description: Specifies whether the lease on a container is of infinite or fixed duration
        metadata:
          type: object
          unevaluatedProperties:
            type: string
          description: A name-value pair to associate with the container as metadata
        immutabilityPolicy:
          allOf:
            - $ref: '#/components/schemas/ImmutabilityPolicyProperties'
          description: The ImmutabilityPolicy property of the container
        legalHold:
          allOf:
            - $ref: '#/components/schemas/LegalHoldProperties'
          description: The LegalHold property of the container
        hasLegalHold:
          type: boolean
          description: The hasLegalHold public property
        hasImmutabilityPolicy:
          type: boolean
          description: The hasImmutabilityPolicy public property
      description: The properties of a container
    ErrorResponse:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: Error code
        message:
          type: string
          description: Error message
    ImmutabilityPolicy:
      type: object
      required:
        - properties
      properties:
        properties:
          allOf:
            - $ref: '#/components/schemas/ImmutabilityPolicyProperty'
          description: The properties of an ImmutabilityPolicy of a blob container
      allOf:
        - $ref: '#/components/schemas/AzureEntityResource'
      description: The ImmutabilityPolicy property of a blob container
    ImmutabilityPolicyProperties:
      type: object
      properties:
        immutabilityPeriodSinceCreationInDays:
          type: integer
          format: int32
          description: The immutability period for the blobs in the container since the policy creation, in days
        state:
          allOf:
            - $ref: '#/components/schemas/ImmutabilityPolicyState'
          description: The ImmutabilityPolicy state of a blob container
        allowProtectedAppendWrites:
          type: boolean
          description: Allow protected append writes
        etag:
          type: string
          description: ImmutabilityPolicy Etag
        updateHistory:
          type: array
          items:
            $ref: '#/components/schemas/UpdateHistoryProperty'
          description: The ImmutabilityPolicy update history of the blob container
      description: The properties of an ImmutabilityPolicy of a blob container
    ImmutabilityPolicyProperty:
      type: object
      properties:
        immutabilityPeriodSinceCreationInDays:
          type: integer
          format: int32
          description: The immutability period for the blobs in the container since the policy creation, in days
        state:
          allOf:
            - $ref: '#/components/schemas/ImmutabilityPolicyState'
          description: The ImmutabilityPolicy state of a blob container
        allowProtectedAppendWrites:
          type: boolean
          description: Allow protected append writes
      description: The properties of an ImmutabilityPolicy of a blob container
    ImmutabilityPolicyState:
      type: string
      enum:
        - Locked
        - Unlocked
      description: The ImmutabilityPolicy state of a blob container
    ImmutabilityPolicyUpdateType:
      type: string
      enum:
        - put
        - lock
        - extend
      description: The ImmutabilityPolicy update type of a blob container
    LastAccessTimeTrackingPolicy:
      type: object
      required:
        - enable
      properties:
        enable:
          type: boolean
          description: When set to true last access time based tracking is enabled
        name:
          allOf:
            - $ref: '#/components/schemas/LastAccessTimeTrackingPolicyName'
          description: Name of the policy
        trackingGranularityInDays:
          type: integer
          format: int32
          description: The field specifies blob object tracking granularity in days
        blobType:
          type: array
          items:
            type: string
          description: An array of predefined supported blob types
      description: The blob service properties for Last access time based tracking policy
    LastAccessTimeTrackingPolicyName:
      type: string
      enum:
        - AccessTimeTracking
      description: Last access time tracking policy name
    LeaseDuration:
      type: string
      enum:
        - Infinite
        - Fixed
      description: Specifies whether the lease on a container is of infinite or fixed duration
    LeaseState:
      type: string
      enum:
        - Available
        - Leased
        - Expired
        - Breaking
        - Broken
      description: Lease state of the container
    LeaseStatus:
      type: string
      enum:
        - Locked
        - Unlocked
      description: The lease status of the container
    LegalHold:
      type: object
      required:
        - tags
      properties:
        hasLegalHold:
          type: boolean
          description: The hasLegalHold public property
        tags:
          type: array
          items:
            type: string
          minItems: 1
          description: Each tag should be 3 to 23 alphanumeric characters
      description: The LegalHold property of a blob container
    LegalHoldProperties:
      type: object
      properties:
        hasLegalHold:
          type: boolean
          description: The hasLegalHold public property
        tags:
          type: array
          items:
            $ref: '#/components/schemas/TagProperty'
          description: The list of LegalHold tags of a blob container
      description: The LegalHold property of a blob container
    ListContainerItem:
      type: object
      properties:
        properties:
          allOf:
            - $ref: '#/components/schemas/ContainerProperties'
          description: The blob container properties be listed out
      allOf:
        - $ref: '#/components/schemas/AzureEntityResource'
      description: The blob container properties be listed out
    ListContainerItems:
      type: object
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/ListContainerItem'
          description: List of blobs containers returned
        nextLink:
          type: string
          description: Request URL that can be used to query next page of containers
      description: Response schema. Contains list of blobs returned, and if paging is requested or required, a URL to next page of containers
    ListContainersInclude:
      type: string
      enum:
        - deleted
      description: Used to include the properties for soft deleted blob containers
    PublicAccess:
      type: string
      enum:
        - Container
        - Blob
        - None
      description: Specifies whether data in the container may be accessed publicly and the level of access
    ResourceGroupName:
      type: string
      description: Azure resource group name
    RestorePolicyProperties:
      type: object
      required:
        - enabled
      properties:
        enabled:
          type: boolean
          description: Blob restore is enabled if set to true
        days:
          type: integer
          format: int32
          minimum: 1
          maximum: 365
          description: How long this blob can be restored
        lastEnabledTime:
          type: string
          format: date-time
          description: Deprecated in favor of minRestoreTime property
        minRestoreTime:
          type: string
          format: date-time
          description: Returns the minimum date and time that the restore can be started
      description: The blob service properties for blob restore policy
    StorageAccountName:
      type: string
      description: Storage account name
    SubscriptionId:
      type: string
      description: Azure subscription ID
    TagProperty:
      type: object
      properties:
        tag:
          type: string
          description: The tag value
        timestamp:
          type: string
          format: date-time
          description: Returns the date and time the tag was added
        objectIdentifier:
          type: string
          description: Returns the Object ID of the user who added the tag
        tenantId:
          type: string
          description: Returns the Tenant ID that issued the token for the user who added the tag
        upn:
          type: string
          description: Returns the User Principal Name of the user who added the tag
      description: A tag of the LegalHold of a blob container
    UpdateHistoryProperty:
      type: object
      properties:
        update:
          allOf:
            - $ref: '#/components/schemas/ImmutabilityPolicyUpdateType'
          description: The ImmutabilityPolicy update type
        immutabilityPeriodSinceCreationInDays:
          type: integer
          format: int32
          description: The immutability period since creation in days
        timestamp:
          type: string
          format: date-time
          description: Returns the date and time the ImmutabilityPolicy was updated
        objectIdentifier:
          type: string
          description: Returns the Object ID of the user who updated the ImmutabilityPolicy
        tenantId:
          type: string
          description: Returns the Tenant ID that issued the token for the user
        upn:
          type: string
          description: Returns the User Principal Name of the user
      description: An update history of the ImmutabilityPolicy of a blob container
servers:
  - url: https://management.azure.com
    description: Azure Resource Manager endpoint
    variables: {}
